(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{280:function(t,a,s){"use strict";s.r(a);var v=s(10),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"首先先了解一下什么是进程和线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先先了解一下什么是进程和线程"}},[t._v("#")]),t._v(" "),s("strong",[t._v("首先先了解一下什么是进程和线程")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de4cfc54107441769d0bd75d03516c2b~tplv-k3u1fbpfcp-watermark.image?",alt:"进程图.png"}})]),t._v(" "),s("h2",{attrs:{id:"进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),s("p",[t._v("进程简单来说就是，QQ，微信，王者荣耀三个软件，他们都会有独立的进程，有了进程之后就可以开始干活了，并且进程之间是互不干扰的，不会因为QQ崩溃了而导致微信无法使用，如果想要通信，需要双方同意才可以传递数据")]),t._v(" "),s("h2",{attrs:{id:"线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),s("p",[t._v("线程就好比，你的老板开了一家公司，把你招聘进来干活，那么老板就是进程，而你就是线程。每个进程都至少要有一个线程，不然的话没人干活呀，所以每次开辟一个进程都会自动生成一个对应的线程。如果程序比较多，比较复杂，进程也可以开辟多个线程同时执行代码")]),t._v(" "),s("h3",{attrs:{id:"举个例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举个例子"}},[t._v("#")]),t._v(" 举个例子")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bd74dc449724d4caddacc7d1caeb85a~tplv-k3u1fbpfcp-watermark.image?",alt:"线程图.png"}})]),t._v(" "),s("ol",[s("li",[t._v("你进入王者荣耀就会开辟一个内存空间，生成一个进程")]),t._v(" "),s("li",[t._v("进程会生成多个线程完成不同的工作")]),t._v(" "),s("li",[t._v("主线程负责一些比较复杂的逻辑，控制游戏逻辑和渲染")]),t._v(" "),s("li",[t._v("游戏线程比如移动方向，释放技能的一些监听")]),t._v(" "),s("li",[t._v("网络线程，你放技能，移动，双方都是同步看到的，这些就是网络线程去完成的")])]),t._v(" "),s("h1",{attrs:{id:"那么浏览器里面有什么进程和线程呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那么浏览器里面有什么进程和线程呢"}},[t._v("#")]),t._v(" 那么浏览器里面有什么进程和线程呢？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90d156450f274d3a985973289d59ecf7~tplv-k3u1fbpfcp-watermark.image?",alt:"浏览器进程.png"}})]),t._v(" "),s("h2",{attrs:{id:"_1-浏览器进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器进程"}},[t._v("#")]),t._v(" 1. 浏览器进程")]),t._v(" "),s("p",[t._v("主要负责界⾯显示、⽤户交互、⼦进程管理等。浏览器进程内部会启动多个线程处理不同的任务。")]),t._v(" "),s("h2",{attrs:{id:"_2-网络进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-网络进程"}},[t._v("#")]),t._v(" 2. ⽹络进程")]),t._v(" "),s("p",[t._v("负责加载⽹络资源。⽹络进程内部会启动多个线程来处理不同的⽹络任务。")]),t._v(" "),s("h2",{attrs:{id:"_3-渲染进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-渲染进程"}},[t._v("#")]),t._v(" 3. 渲染进程")]),t._v(" "),s("p",[t._v("渲染进程启动后，会开启⼀个渲染主线程，主线程负责执⾏ HTML、CSS、JS 代码。默认情况下，浏览器会为每个标签⻚开启⼀个新的渲染进程，以保证不同的标签⻚之间不相互影响。")]),t._v(" "),s("h1",{attrs:{id:"渲染主线程是怎么工作的呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染主线程是怎么工作的呢"}},[t._v("#")]),t._v(" 渲染主线程是怎么工作的呢？")]),t._v(" "),s("h2",{attrs:{id:"渲染主线程就是浏览器中最重要且最繁忙的线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染主线程就是浏览器中最重要且最繁忙的线程"}},[t._v("#")]),t._v(" 渲染主线程就是浏览器中最重要且最繁忙的线程")]),t._v(" "),s("ul",[s("li",[t._v("渲染html")]),t._v(" "),s("li",[t._v("解析css")]),t._v(" "),s("li",[t._v("解析js")]),t._v(" "),s("li",[t._v("计算样式")]),t._v(" "),s("li",[t._v("布局")]),t._v(" "),s("li",[t._v("执行事件处理函数")]),t._v(" "),s("li",[t._v(". . . . . .")])]),t._v(" "),s("p",[s("strong",[t._v("浏览器渲染流程详解")]),t._v("： "),s("a",{attrs:{href:"https://juejin.cn/post/7225516176171728957",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/7225516176171728957"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"负责处理这么多任务-还出现了一个难题如何调度任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负责处理这么多任务-还出现了一个难题如何调度任务"}},[t._v("#")]),t._v(" 负责处理这么多任务，还出现了一个难题如何调度任务？")]),t._v(" "),s("ol",[s("li",[t._v("当浏览器在执行js代码的时候，用户点击了按钮，那么是继续执行js代码还是执行点击后的逻辑？")]),t._v(" "),s("li",[t._v("当计时器时间到了，恰巧用户又点了一下按钮，那么先执行定时器还是点击后的逻辑呢？")])]),t._v(" "),s("h1",{attrs:{id:"event-loop-事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-事件循环"}},[t._v("#")]),t._v(" event loop （事件循环）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e04ece4dcbf4755be3278e105b3ed43~tplv-k3u1fbpfcp-watermark.image?",alt:"事件循环.png"}})]),t._v(" "),s("ol",[s("li",[t._v("渲染主线程会开启一个无限循环，每次取出消息队列中第一个任务执行，直到消息队列为空")]),t._v(" "),s("li",[t._v("当有其他任务（定时器的回调，点击事件的函数）则追加到消息队列的末尾，依次执行")])]),t._v(" "),s("h1",{attrs:{id:"什么是异步呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是异步呢"}},[t._v("#")]),t._v(" 什么是异步呢？")]),t._v(" "),s("h2",{attrs:{id:"我们平时在写代码中也会经常接触到一些无法立即执行的任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我们平时在写代码中也会经常接触到一些无法立即执行的任务"}},[t._v("#")]),t._v(" 我们平时在写代码中也会经常接触到一些无法立即执行的任务")]),t._v(" "),s("ol",[s("li",[t._v("定时器 （"),s("strong",[t._v("setTimeout, setInterval")]),t._v("）")]),t._v(" "),s("li",[t._v("网络请求ajax （"),s("strong",[t._v("XHR, Fetch")]),t._v("）")]),t._v(" "),s("li",[t._v("绑定点击事件 （"),s("strong",[t._v("onclick, addEventListener")]),t._v("）")])]),t._v(" "),s("h4",{attrs:{id:"因为js是一门单线程语言-如果渲染主线程等这些代码执行完再执行下一个任务-渲染主线程长期阻塞-将会导致整个页面卡死-用户体验极差"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#因为js是一门单线程语言-如果渲染主线程等这些代码执行完再执行下一个任务-渲染主线程长期阻塞-将会导致整个页面卡死-用户体验极差"}},[t._v("#")]),t._v(" 因为js是一门单线程语言，如果渲染主线程等这些代码执行完再执行下一个任务，渲染主线程长期阻塞，将会导致整个页面卡死，用户体验极差")]),t._v(" "),s("h1",{attrs:{id:"无法立即执行代码浏览器如何处理的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无法立即执行代码浏览器如何处理的"}},[t._v("#")]),t._v(" 无法立即执行代码浏览器如何处理的？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21fd0e7cd17648efa5c65ea64766c6c4~tplv-k3u1fbpfcp-watermark.image?",alt:"异步执行.png"}})]),t._v(" "),s("ol",[s("li",[t._v("浏览器使用了异步来解决这个问题")]),t._v(" "),s("li",[t._v("当执行js时，渲染主线程遇到了一个定时器，那么会交给一个计时线程，当时间到了，会生成一个任务，追加到消息队列的末尾，等待渲染主线程的调用，如果有多个异步代码，也是使用相同的步骤去执行")]),t._v(" "),s("li",[t._v("使⽤异步的⽅式，渲染主线程永不阻塞")])]),t._v(" "),s("h1",{attrs:{id:"那么异步任务有优先级吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那么异步任务有优先级吗"}},[t._v("#")]),t._v(" 那么异步任务有优先级吗？")]),t._v(" "),s("ol",[s("li",[t._v("任务是没有优先级的，在消息队列中先进先出")]),t._v(" "),s("li",[t._v("但消息队列中是有优先级的")]),t._v(" "),s("li",[t._v("在chrome中至少包含以下队列")])]),t._v(" "),s("ul",[s("li",[t._v("延时队列：⽤于存放计时器到达后的回调任务，优先级「中」")]),t._v(" "),s("li",[t._v("交互队列：⽤于存放⽤户操作后产⽣的事件处理任务，优先级「⾼」")]),t._v(" "),s("li",[t._v("微队列：⽤户存放需要最快执⾏的任务，优先级「最⾼」")])]),t._v(" "),s("h2",{attrs:{id:"微队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微队列"}},[t._v("#")]),t._v(" 微队列")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立即把回调函数添加到微队列中")]),t._v("\nPromise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("回调函数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"交互队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互队列"}},[t._v("#")]),t._v(" 交互队列")]),t._v(" "),s("p",[t._v("跟用户交互的事件就会进入交互队列")]),t._v(" "),s("ul",[s("li",[t._v("鼠标点击事件")]),t._v(" "),s("li",[t._v("键盘事件")]),t._v(" "),s("li",[t._v("窗口大小改变")]),t._v(" "),s("li",[t._v(". . . . . .")])]),t._v(" "),s("h2",{attrs:{id:"延迟队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#延迟队列"}},[t._v("#")]),t._v(" 延迟队列")]),t._v(" "),s("ul",[s("li",[t._v("setTimeout")]),t._v(" "),s("li",[t._v("setInterval")])])])}),[],!1,null,null,null);a.default=_.exports}}]);